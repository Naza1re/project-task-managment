version: '3'

services:

  api-gateway:
    image: api-gateway
    container_name: api-gateway
    ports:
      - '8070:8070'
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8090/eureka
    depends_on:
      - eureka
    networks:
      - task-management


  eureka:
    image: eureka-server
    container_name: eureka-server
    ports:
      - '8090:8090'
    networks:
      - task-management

  task-service:
    image: task-service
    container_name: task-service
    ports:
      - '8082:8082'
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/task
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8090/eureka
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://keycloak:8080/auth/realms/task-realm/protocol/openid-connect/certs
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_VIRTUAL_HOST=vhost
    depends_on:
      - eureka
      - mongodb
      - keycloak
      - rabbitmq
    networks:
      - task-management

  user-service:
    container_name: user-service
    image: user-service
    ports:
      - '8081:8081'
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/task
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8090/eureka
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://keycloak:8080/auth/realms/task-realm/protocol/openid-connect/certs
    depends_on:
      - eureka
      - mongodb
      - keycloak
    networks:
      - task-management

  project-service:
    container_name: project-service
    image: project-service
    ports:
      - '8083:8083'
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/company
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8090/eureka
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://keycloak:8080/auth/realms/task-realm/protocol/openid-connect/certs
    depends_on:
      - eureka
      - mongodb
      - keycloak
    networks:
      - task-management

  company-service:
    image: company-service
    container_name: company-service
    ports:
      - '8084:8084'
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/company
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8090/eureka
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8080/auth/realms/task-realm
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://keycloak:8080/auth/realms/task-realm/protocol/openid-connect/certs
    depends_on:
      - mongodb
      - keycloak
      - eureka
    networks:
      - task-management



  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloakdb
      POSTGRES_USER: keycloakuser
      POSTGRES_PASSWORD: keycloakpass
    networks:
      - task-management

  keycloak:
    image: quay.io/keycloak/keycloak:16.1.1
    hostname: keycloak
    ports:
      - '8080:8080'
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloakdb
      DB_SCHEMA: public
      DB_USER: keycloakuser
      DB_PASSWORD: keycloakpass
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: adminpass
      KEYCLOAK_IMPORT: /opt/keycloak/data/import/realm-export.json
      KEYCLOAK_FRONTEND_URL: "http://localhost:8080/auth"
    volumes:
        - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
    networks:
      - task-management
    links:
      - "postgres:postgres"
    depends_on:
      - postgres

  mongodb:
    image: mongo:latest
    container_name: "mongodb"
    ports:
      - '27070:27017'
    networks:
      - task-management

  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    hostname: rabbitmq
    restart: unless-stopped
    environment:
      TZ: Europe/Moscow
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: root
      RABBITMQ_DEFAULT_VHOST: vhost
    volumes:
      - ./rabbitmq:/var/lib/rabbitmqï¿¼
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - task-management

networks:
  task-management:
    driver: bridge

volumes:
  postgres_data:
    driver: local